The x509.pfx was created by running:

makecert -sr LocalMachine -ss My -pe -n "CN=localhost" -a sha256 -len 1024 -r

The x509-sha1.pfx was created by running:

makecert -pe -r -ss my -sr localMachine -n CN=localhost -e 01/01/2099 -a sha1 -eku 1.3.6.1.5.5.7.3.1 -sky exchange -sp "Microsoft RSA SChannel Cryptographic Provider" -sy 12

The x509-sha1-client.pfx was created by running:

makecert -pe -r -ss my -sr localMachine -n CN=httpsys-client -e 01/01/2099 -a sha1 -sky exchange -sp "Microsoft RSA SChannel Cryptographic Provider" -sy 12

(NOTE: Node.js v0.6.x does not appear to work with SHA256 server certificate - it cannot negotiate a common cypher suite)

Both certs were then exported from LocalMachine|My certificate store into *.pfx files, encrypted with `httpsys` password, including the private key.

To configure the certificate to be used for HTTP.SYS, make sure it is available in the LocalMachine|My certificate store, then run one of the following:

For x509.pfx:

netsh http add sslcert ipport=0.0.0.0:8080 certhash=9c53ccbf622316f66770512815eedeec32a233aa appid={00112233-4455-6677-8899-AABBCCDDEEFE}

For x509-sha1.pfx:

netsh http add sslcert ipport=0.0.0.0:8080 certhash=C08E29A696CCC5A25E2F3B9A9434EA624B837EE8 appid={00112233-4455-6677-8899-AABBCCDDEEFE}

(The value of the certhash corresponds to the checked in x509.pfx and x509-sha1.pfx; if another certificate was generated with makecert, that value needs to be updated)

To verify the certificate had been configured, run:

netsh http show sslcert ipport=0.0.0.0:8080

To export PFX to PEM format:

openssl pkcs12 -in x509.pfx -out x509.pem -nodes
